---
title: "Lab 4"
author: "Kelbi Hall"
date: "2025-03-13"
output: html_document
---
```{r}
remotes::install_github("lter/lterdatasampler")

library(tidyverse)
library(ggpubr)
library(lterdatasampler)
library(car)
library(visdat)
```
```{r}

data("and_vertebrates")

glimpse(and_vertebrates)

vis_dat(and_vertebrates)

```
```{r}

?and_vertebrates

and_vertebrates |> 
  filter(species == "Cutthroat trout") |> 
  count(unittype)

and_vertebrates |> 
  filter(species == "Cutthroat trout") |> 
  drop_na(unittype) |> 
  count(unittype)
```
```{r}
trout_clean <- and_vertebrates  |>  
  filter(species == "Cutthroat trout") |> 
  
  filter(unittype %in% c("C", "P", "SC")) |> 

  drop_na(unittype, section)

cont_table <- table(trout_clean$section, trout_clean$unittype)
chisq.test(cont_table)
```
```{r}
trout_clean  |>  
  count(unittype, section)  |>  
  ggpubr::ggbarplot(x = 'unittype', y = 'n', 
                    fill = 'section', 
                    palette = c("#00AFBB", "#E7B800"),
                    add = "mean_se") 
```
```{r}
trout_clean |> 
  drop_na(weight_g) |> 
  ggpubr::ggviolin(x = "section", 
                   y     = "weight_g", 
                   add   = "boxplot",
                   color = "section",
                   palette = c("#00AFBB", "#E7B800")) 
```
```{r}
cc_weight <- trout_clean |> 
  filter(section == "CC") |> 
  pull(weight_g)

og_weight <- trout_clean |> 
  filter(section == "OG") |> 
  pull(weight_g)

var.test(cc_weight, og_weight)
```
```{r}
ggpubr::ggarrange(ggpubr::gghistogram(cc_weight, main = "Clear Cut"), 
                  ggpubr::gghistogram(og_weight, main = "Old Growth"))
```
```{r}
var.test(log(cc_weight), log(og_weight))
```
```{r}
t.test(log(trout_clean$weight_g) ~ trout_clean$section, var.equal = TRUE)
t.test(trout_clean$weight_g ~ trout_clean$section, var.equal = FALSE)
```
```{r}
sally_clean <- and_vertebrates |> 
  filter(species == "Coastal giant salamander") |> 
  drop_na(length_2_mm, weight_g)

ggarrange(gghistogram(sally_clean$length_2_mm, title = "Length"),
gghistogram(sally_clean$weight_g, title = "Weight"))

```
```{r}
s <- sally_clean |> 
  slice_sample(n = 5000) 

shapiro.test(s$length_2_mm)
shapiro.test(s$weight_g)
```
```{r}
ggarrange(
 gghistogram(log(sally_clean$length_2_mm), title = "Length"), 
 gghistogram(log(sally_clean$weight_g), title = "Weight") )
```
```{r}
cor.test(log(sally_clean$length_2_mm), log(sally_clean$weight_g))
```
```{r}
sally_clean |> 
  mutate(log_length = log(length_2_mm), log_weight = log(weight_g)) |> 
  ggscatter(x = 'log_length', 
            y = 'log_weight', 
            alpha = .35,
            add = "loess")
```

```{r}
cor.test(sally_clean$length_2_mm, sally_clean$weight_g, method = "spearman")
```
## Exercises: Part 1

```{r}

salamander_clean <- and_vertebrates |> 
  filter(species == "Coastal giant salamander") |> 
  drop_na(unittype, section)

cont_table_sally <- table(salamander_clean$section, salamander_clean$unittype)

salamander_chi <- chisq.test(cont_table_sally)

salamander_chi


```

```{r}

salamander_weight <- salamander_clean |> drop_na(weight_g)

ggviolin(salamander_weight, x = "section", y = "weight_g", add = "boxplot", color = "section")

salamander_var_test <- var.test(weight_g ~ section, data = salamander_weight)

salamander_var_test

salamander_ttest <- t.test(weight_g ~ section, data = salamander_weight, var.equal = FALSE)

salamander_ttest

```
```{r}

trout_sample <- trout_clean |> slice_sample(n = 5000)

shapiro.test(trout_sample$length_1_mm)
shapiro.test(trout_sample$weight_g)


trout_clean <- trout_clean |> mutate(log_length = log(length_1_mm), log_weight = log(weight_g))

pearson_corr <- cor.test(trout_clean$log_length, trout_clean$log_weight, method = "pearson")

spearman_corr <- cor.test(trout_clean$length_1_mm, trout_clean$weight_g, method = "spearman")

pearson_corr

```
##Part 2: Multivariate Statistics

```{r}

data("pie_crab")

count(pie_crab, site)

leveneTest(size ~ site, data = pie_crab)
pie_anova_all <- aov(size ~ site, data = pie_crab)
summary(pie_anova_all)


shapiro.test(residuals(pie_anova_all)) 

ggboxplot(pie_crab, x = "site", y = "size", color = "site") +
  geom_jitter(size = 0.25)

pie_sites <- pie_crab |> filter(site %in% c("GTM", "DB", "PIE"))


leveneTest(size ~ site, data = pie_sites)

pie_anova <- aov(size ~ site, data = pie_sites)
summary(pie_anova)


TukeyHSD(pie_anova)


ggboxplot(pie_sites, x = "site", y = "size", color = "site") + geom_jitter(size = 0.25)

pie_lm_water <- lm(size ~ water_temp_sd, data = pie_crab)
summary(pie_lm_water)

ggscatter(pie_crab, x = "water_temp_sd", y = "size", alpha = 0.35, add = "reg.line")


cor_table <- pie_crab |> select(latitude, air_temp_sd, water_temp_sd) |> cor()
print(cor_table)

pie_mlm <- lm(size ~ latitude + air_temp_sd + water_temp_sd, data = pie_crab)
summary(pie_mlm)

```


