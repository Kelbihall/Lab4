[
  {
    "objectID": "Lab 4.html",
    "href": "Lab 4.html",
    "title": "Lab 4: Statistics",
    "section": "",
    "text": "remotes::install_github(\"lter/lterdatasampler\")\n\nUsing GitHub PAT from the git credential store.\n\n\nSkipping install of 'lterdatasampler' from a github remote, the SHA1 (ff784768) has not changed since last install.\n  Use `force = TRUE` to force installation\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(ggpubr)\nlibrary(lterdatasampler)\nlibrary(car)\n\nLoading required package: carData\n\nAttaching package: 'car'\n\nThe following object is masked from 'package:dplyr':\n\n    recode\n\nThe following object is masked from 'package:purrr':\n\n    some\n\nlibrary(visdat)\ndata(\"and_vertebrates\")\n\nglimpse(and_vertebrates)\n\nRows: 32,209\nColumns: 16\n$ year        &lt;dbl&gt; 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987…\n$ sitecode    &lt;chr&gt; \"MACKCC-L\", \"MACKCC-L\", \"MACKCC-L\", \"MACKCC-L\", \"MACKCC-L\"…\n$ section     &lt;chr&gt; \"CC\", \"CC\", \"CC\", \"CC\", \"CC\", \"CC\", \"CC\", \"CC\", \"CC\", \"CC\"…\n$ reach       &lt;chr&gt; \"L\", \"L\", \"L\", \"L\", \"L\", \"L\", \"L\", \"L\", \"L\", \"L\", \"L\", \"L\"…\n$ pass        &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ unitnum     &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2…\n$ unittype    &lt;chr&gt; \"R\", \"R\", \"R\", \"R\", \"R\", \"R\", \"R\", \"R\", \"R\", \"R\", \"R\", \"R\"…\n$ vert_index  &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 1, …\n$ pitnumber   &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ species     &lt;chr&gt; \"Cutthroat trout\", \"Cutthroat trout\", \"Cutthroat trout\", \"…\n$ length_1_mm &lt;dbl&gt; 58, 61, 89, 58, 93, 86, 107, 131, 103, 117, 100, 127, 99, …\n$ length_2_mm &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ weight_g    &lt;dbl&gt; 1.75, 1.95, 5.60, 2.15, 6.90, 5.90, 10.50, 20.60, 9.55, 13…\n$ clip        &lt;chr&gt; \"NONE\", \"NONE\", \"NONE\", \"NONE\", \"NONE\", \"NONE\", \"NONE\", \"N…\n$ sampledate  &lt;date&gt; 1987-10-07, 1987-10-07, 1987-10-07, 1987-10-07, 1987-10-0…\n$ notes       &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n\nvis_dat(and_vertebrates)\n?and_vertebrates\n\nand_vertebrates |&gt; \n  filter(species == \"Cutthroat trout\") |&gt; \n  count(unittype)\n\n# A tibble: 8 × 2\n  unittype     n\n  &lt;chr&gt;    &lt;int&gt;\n1 C        11419\n2 I           23\n3 IP         105\n4 P         5470\n5 R          420\n6 S            9\n7 SC        2377\n8 &lt;NA&gt;       610\n\nand_vertebrates |&gt; \n  filter(species == \"Cutthroat trout\") |&gt; \n  drop_na(unittype) |&gt; \n  count(unittype)\n\n# A tibble: 7 × 2\n  unittype     n\n  &lt;chr&gt;    &lt;int&gt;\n1 C        11419\n2 I           23\n3 IP         105\n4 P         5470\n5 R          420\n6 S            9\n7 SC        2377\ntrout_clean &lt;- and_vertebrates  |&gt;  \n  filter(species == \"Cutthroat trout\") |&gt; \n  \n  filter(unittype %in% c(\"C\", \"P\", \"SC\")) |&gt; \n\n  drop_na(unittype, section)\n\ncont_table &lt;- table(trout_clean$section, trout_clean$unittype)\nchisq.test(cont_table)\n\n\n    Pearson's Chi-squared test\n\ndata:  cont_table\nX-squared = 188.68, df = 2, p-value &lt; 2.2e-16\ntrout_clean  |&gt;  \n  count(unittype, section)  |&gt;  \n  ggpubr::ggbarplot(x = 'unittype', y = 'n', \n                    fill = 'section', \n                    palette = c(\"#00AFBB\", \"#E7B800\"),\n                    add = \"mean_se\") \n\nWarning in stats::qt(ci/2 + 0.5, data_sum$length - 1): NaNs produced\nWarning in stats::qt(ci/2 + 0.5, data_sum$length - 1): NaNs produced\nWarning in stats::qt(ci/2 + 0.5, data_sum$length - 1): NaNs produced\nWarning in stats::qt(ci/2 + 0.5, data_sum$length - 1): NaNs produced\nWarning in stats::qt(ci/2 + 0.5, data_sum$length - 1): NaNs produced\nWarning in stats::qt(ci/2 + 0.5, data_sum$length - 1): NaNs produced\ntrout_clean |&gt; \n  drop_na(weight_g) |&gt; \n  ggpubr::ggviolin(x = \"section\", \n                   y     = \"weight_g\", \n                   add   = \"boxplot\",\n                   color = \"section\",\n                   palette = c(\"#00AFBB\", \"#E7B800\"))\ncc_weight &lt;- trout_clean |&gt; \n  filter(section == \"CC\") |&gt; \n  pull(weight_g)\n\nog_weight &lt;- trout_clean |&gt; \n  filter(section == \"OG\") |&gt; \n  pull(weight_g)\n\nvar.test(cc_weight, og_weight)\n\n\n    F test to compare two variances\n\ndata:  cc_weight and og_weight\nF = 1.2889, num df = 6310, denom df = 5225, p-value &lt; 2.2e-16\nalternative hypothesis: true ratio of variances is not equal to 1\n95 percent confidence interval:\n 1.223686 1.357398\nsample estimates:\nratio of variances \n          1.288892\nggpubr::ggarrange(ggpubr::gghistogram(cc_weight, main = \"Clear Cut\"), \n                  ggpubr::gghistogram(og_weight, main = \"Old Growth\"))\n\nWarning: Using `bins = 30` by default. Pick better value with the argument\n`bins`.\nWarning: Using `bins = 30` by default. Pick better value with the argument\n`bins`.\n\n\nWarning: Removed 4273 rows containing non-finite outside the scale range\n(`stat_bin()`).\n\n\nWarning: Removed 3456 rows containing non-finite outside the scale range\n(`stat_bin()`).\nvar.test(log(cc_weight), log(og_weight))\n\n\n    F test to compare two variances\n\ndata:  log(cc_weight) and log(og_weight)\nF = 1.0208, num df = 6310, denom df = 5225, p-value = 0.4374\nalternative hypothesis: true ratio of variances is not equal to 1\n95 percent confidence interval:\n 0.9691443 1.0750427\nsample estimates:\nratio of variances \n          1.020787\nt.test(log(trout_clean$weight_g) ~ trout_clean$section, var.equal = TRUE)\n\n\n    Two Sample t-test\n\ndata:  log(trout_clean$weight_g) by trout_clean$section\nt = 2.854, df = 11535, p-value = 0.004324\nalternative hypothesis: true difference in means between group CC and group OG is not equal to 0\n95 percent confidence interval:\n 0.02222425 0.11969560\nsample estimates:\nmean in group CC mean in group OG \n        1.457042         1.386082 \n\nt.test(trout_clean$weight_g ~ trout_clean$section, var.equal = FALSE)\n\n\n    Welch Two Sample t-test\n\ndata:  trout_clean$weight_g by trout_clean$section\nt = 4.5265, df = 11491, p-value = 6.056e-06\nalternative hypothesis: true difference in means between group CC and group OG is not equal to 0\n95 percent confidence interval:\n 0.4642016 1.1733126\nsample estimates:\nmean in group CC mean in group OG \n        8.988807         8.170050\nsally_clean &lt;- and_vertebrates |&gt; \n  filter(species == \"Coastal giant salamander\") |&gt; \n  drop_na(length_2_mm, weight_g)\n\nggarrange(gghistogram(sally_clean$length_2_mm, title = \"Length\"),\ngghistogram(sally_clean$weight_g, title = \"Weight\"))\n\nWarning: Using `bins = 30` by default. Pick better value with the argument\n`bins`.\nWarning: Using `bins = 30` by default. Pick better value with the argument\n`bins`.\ns &lt;- sally_clean |&gt; \n  slice_sample(n = 5000) \n\nshapiro.test(s$length_2_mm)\n\n\n    Shapiro-Wilk normality test\n\ndata:  s$length_2_mm\nW = 0.93614, p-value &lt; 2.2e-16\n\nshapiro.test(s$weight_g)\n\n\n    Shapiro-Wilk normality test\n\ndata:  s$weight_g\nW = 0.56044, p-value &lt; 2.2e-16\nggarrange(\n gghistogram(log(sally_clean$length_2_mm), title = \"Length\"), \n gghistogram(log(sally_clean$weight_g), title = \"Weight\") )\n\nWarning: Using `bins = 30` by default. Pick better value with the argument\n`bins`.\nWarning: Using `bins = 30` by default. Pick better value with the argument\n`bins`.\ncor.test(log(sally_clean$length_2_mm), log(sally_clean$weight_g))\n\n\n    Pearson's product-moment correlation\n\ndata:  log(sally_clean$length_2_mm) and log(sally_clean$weight_g)\nt = 402.85, df = 6229, p-value &lt; 2.2e-16\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n 0.9804036 0.9822403\nsample estimates:\n      cor \n0.9813443\nsally_clean |&gt; \n  mutate(log_length = log(length_2_mm), log_weight = log(weight_g)) |&gt; \n  ggscatter(x = 'log_length', \n            y = 'log_weight', \n            alpha = .35,\n            add = \"loess\")\ncor.test(sally_clean$length_2_mm, sally_clean$weight_g, method = \"spearman\")\n\nWarning in cor.test.default(sally_clean$length_2_mm, sally_clean$weight_g, :\nCannot compute exact p-value with ties\n\n\n\n    Spearman's rank correlation rho\n\ndata:  sally_clean$length_2_mm and sally_clean$weight_g\nS = 819296957, p-value &lt; 2.2e-16\nalternative hypothesis: true rho is not equal to 0\nsample estimates:\n      rho \n0.9796802"
  },
  {
    "objectID": "Lab 4.html#exercises-part-1",
    "href": "Lab 4.html#exercises-part-1",
    "title": "Lab 4: Statistics",
    "section": "Exercises: Part 1",
    "text": "Exercises: Part 1\n\nsalamander_clean &lt;- and_vertebrates |&gt; \n  filter(species == \"Coastal giant salamander\") |&gt; \n  drop_na(unittype, section)\n\ncont_table_sally &lt;- table(salamander_clean$section, salamander_clean$unittype)\n\nsalamander_chi &lt;- chisq.test(cont_table_sally)\n\nWarning in chisq.test(cont_table_sally): Chi-squared approximation may be\nincorrect\n\nsalamander_chi\n\n\n    Pearson's Chi-squared test\n\ndata:  cont_table_sally\nX-squared = 200.71, df = 5, p-value &lt; 2.2e-16\n\n\n\nsalamander_weight &lt;- salamander_clean |&gt; drop_na(weight_g)\n\nggviolin(salamander_weight, x = \"section\", y = \"weight_g\", add = \"boxplot\", color = \"section\")\n\n\n\n\n\n\n\nsalamander_var_test &lt;- var.test(weight_g ~ section, data = salamander_weight)\n\nsalamander_var_test\n\n\n    F test to compare two variances\n\ndata:  weight_g by section\nF = 0.82901, num df = 3027, denom df = 3309, p-value = 1.439e-07\nalternative hypothesis: true ratio of variances is not equal to 1\n95 percent confidence interval:\n 0.7732148 0.8889213\nsample estimates:\nratio of variances \n         0.8290065 \n\nsalamander_ttest &lt;- t.test(weight_g ~ section, data = salamander_weight, var.equal = FALSE)\n\nsalamander_ttest\n\n\n    Welch Two Sample t-test\n\ndata:  weight_g by section\nt = 4.9255, df = 6335.9, p-value = 8.629e-07\nalternative hypothesis: true difference in means between group CC and group OG is not equal to 0\n95 percent confidence interval:\n 0.8978633 2.0850725\nsample estimates:\nmean in group CC mean in group OG \n        9.810634         8.319166 \n\n\n\ntrout_sample &lt;- trout_clean |&gt; slice_sample(n = 5000)\n\nshapiro.test(trout_sample$length_1_mm)\n\n\n    Shapiro-Wilk normality test\n\ndata:  trout_sample$length_1_mm\nW = 0.93691, p-value &lt; 2.2e-16\n\nshapiro.test(trout_sample$weight_g)\n\n\n    Shapiro-Wilk normality test\n\ndata:  trout_sample$weight_g\nW = 0.79094, p-value &lt; 2.2e-16\n\ntrout_clean &lt;- trout_clean |&gt; mutate(log_length = log(length_1_mm), log_weight = log(weight_g))\n\npearson_corr &lt;- cor.test(trout_clean$log_length, trout_clean$log_weight, method = \"pearson\")\n\nspearman_corr &lt;- cor.test(trout_clean$length_1_mm, trout_clean$weight_g, method = \"spearman\")\n\nWarning in cor.test.default(trout_clean$length_1_mm, trout_clean$weight_g, :\nCannot compute exact p-value with ties\n\npearson_corr\n\n\n    Pearson's product-moment correlation\n\ndata:  trout_clean$log_length and trout_clean$log_weight\nt = 863.78, df = 11533, p-value &lt; 2.2e-16\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n 0.9920768 0.9926326\nsample estimates:\n      cor \n0.9923597 \n\n\n##Part 2: Multivariate Statistics\n\ndata(\"pie_crab\")\n\ncount(pie_crab, site)\n\n# A tibble: 13 × 2\n   site      n\n   &lt;chr&gt; &lt;int&gt;\n 1 BC       37\n 2 CC       27\n 3 CT       33\n 4 DB       30\n 5 GTM      28\n 6 JC       30\n 7 NB       29\n 8 NIB      30\n 9 PIE      28\n10 RC       25\n11 SI       30\n12 VCR      30\n13 ZI       35\n\nleveneTest(size ~ site, data = pie_crab)\n\nWarning in leveneTest.default(y = y, group = group, ...): group coerced to\nfactor.\n\n\nLevene's Test for Homogeneity of Variance (center = median)\n       Df F value    Pr(&gt;F)    \ngroup  12  9.2268 1.151e-15 ***\n      379                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\npie_anova_all &lt;- aov(size ~ site, data = pie_crab)\nsummary(pie_anova_all)\n\n             Df Sum Sq Mean Sq F value Pr(&gt;F)    \nsite         12   2172  181.03   26.12 &lt;2e-16 ***\nResiduals   379   2626    6.93                   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nshapiro.test(residuals(pie_anova_all)) \n\n\n    Shapiro-Wilk normality test\n\ndata:  residuals(pie_anova_all)\nW = 0.99708, p-value = 0.7122\n\nggboxplot(pie_crab, x = \"site\", y = \"size\", color = \"site\") +\n  geom_jitter(size = 0.25)\n\n\n\n\n\n\n\npie_sites &lt;- pie_crab |&gt; filter(site %in% c(\"GTM\", \"DB\", \"PIE\"))\n\n\nleveneTest(size ~ site, data = pie_sites)\n\nWarning in leveneTest.default(y = y, group = group, ...): group coerced to\nfactor.\n\n\nLevene's Test for Homogeneity of Variance (center = median)\n      Df F value Pr(&gt;F)\ngroup  2   0.548 0.5802\n      83               \n\npie_anova &lt;- aov(size ~ site, data = pie_sites)\nsummary(pie_anova)\n\n            Df Sum Sq Mean Sq F value Pr(&gt;F)    \nsite         2  521.5  260.75   60.02 &lt;2e-16 ***\nResiduals   83  360.6    4.34                   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nTukeyHSD(pie_anova)\n\n  Tukey multiple comparisons of means\n    95% family-wise confidence level\n\nFit: aov(formula = size ~ site, data = pie_sites)\n\n$site\n             diff       lwr       upr   p adj\nGTM-DB  -3.200786 -4.507850 -1.893722 3.0e-07\nPIE-DB   2.899929  1.592865  4.206992 2.9e-06\nPIE-GTM  6.100714  4.771306  7.430123 0.0e+00\n\nggboxplot(pie_sites, x = \"site\", y = \"size\", color = \"site\") + geom_jitter(size = 0.25)\n\n\n\n\n\n\n\npie_lm_water &lt;- lm(size ~ water_temp_sd, data = pie_crab)\nsummary(pie_lm_water)\n\n\nCall:\nlm(formula = size ~ water_temp_sd, data = pie_crab)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-7.9428 -2.6948 -0.2145  2.6573  8.8070 \n\nCoefficients:\n              Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)   13.93728    1.15338  12.084   &lt;2e-16 ***\nwater_temp_sd  0.09938    0.15716   0.632    0.528    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 3.506 on 390 degrees of freedom\nMultiple R-squared:  0.001024,  Adjusted R-squared:  -0.001537 \nF-statistic: 0.3999 on 1 and 390 DF,  p-value: 0.5275\n\nggscatter(pie_crab, x = \"water_temp_sd\", y = \"size\", alpha = 0.35, add = \"reg.line\")\n\n\n\n\n\n\n\ncor_table &lt;- pie_crab |&gt; select(latitude, air_temp_sd, water_temp_sd) |&gt; cor()\nprint(cor_table)\n\n                latitude air_temp_sd water_temp_sd\nlatitude      1.00000000   0.7932130    0.04188273\nair_temp_sd   0.79321301   1.0000000    0.40970338\nwater_temp_sd 0.04188273   0.4097034    1.00000000\n\npie_mlm &lt;- lm(size ~ latitude + air_temp_sd + water_temp_sd, data = pie_crab)\nsummary(pie_mlm)\n\n\nCall:\nlm(formula = size ~ latitude + air_temp_sd + water_temp_sd, data = pie_crab)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-7.7515 -1.8897  0.0506  1.9301  6.6746 \n\nCoefficients:\n              Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)   -3.96880    1.54818  -2.564   0.0107 *  \nlatitude       0.55940    0.06413   8.723   &lt;2e-16 ***\nair_temp_sd   -0.41713    0.30559  -1.365   0.1730    \nwater_temp_sd  0.15927    0.16174   0.985   0.3254    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 2.832 on 388 degrees of freedom\nMultiple R-squared:  0.3516,    Adjusted R-squared:  0.3466 \nF-statistic: 70.13 on 3 and 388 DF,  p-value: &lt; 2.2e-16"
  }
]